# Copyright (C) 2022 Roberto Rossini <roberros@uio.no>
# SPDX-License-Identifier: MIT

name: Run clang-tidy

on:
  push:
    branches: [main]
    paths:
      - ".github/workflows/run-clang-tidy.yml"
      - "cmake/**"
      - "examples/**"
      - "src/**"
      - "test/units/**"
      - "utils/devel/build_dependencies.py"
      - ".clang-tidy"
      - "CMakeLists.txt"
      - "conanfile.py"

  pull_request:
    paths:
      - ".github/workflows/run-clang-tidy.yml"
      - "cmake/**"
      - "examples/**"
      - "src/**"
      - "test/units/**"
      - "utils/devel/build_dependencies.py"
      - ".clang-tidy"
      - "CMakeLists.txt"
      - "conanfile.py"

# https://stackoverflow.com/a/72408109
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

defaults:
  run:
    shell: bash

permissions:
  contents: read

jobs:
  detect-changed-files:
    name: Detect Changed Files
    runs-on: ubuntu-24.04

    outputs:
      no-files-changed: ${{ steps.changed-files.outputs.skip }}

    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Detect changed files
        id: changed-files
        run: |
          if [[ '${{ github.event_name }}' == 'pull_request' ]]; then
            BASE_REF='${{ github.event.pull_request.base.ref }}'
            HEAD_SHA='${{ github.event.pull_request.head.sha }}'
            BASE_SHA="$(git merge-base "origin/$BASE_REF" "$HEAD_SHA")"

            1>&2 echo "Comparing $HEAD_SHA with $BASE_SHA..."
            git diff --name-only --diff-filter=ACMR "$BASE_SHA" "$HEAD_SHA"
          else
            git ls-tree -r '${{ github.ref }}' --name-only
          fi |
            { grep '.*\.[hc]pp$' || true; } |
            sed '/^$/d' |
            tee filelist.txt

          if [ -s filelist.txt ]; then
            echo "skip=false" >> "$GITHUB_OUTPUT"
          else
            echo "skip=true" >> "$GITHUB_OUTPUT"
          fi

      - name: Upload filelist.txt
        if: steps.changed-files.outputs.skip != 'true'
        uses: actions/upload-artifact@v4
        with:
          name: clang-tidy-filelist
          path: filelist.txt
          if-no-files-found: error
          retention-days: 1

  build-deps:
    name: Build dependencies
    if: needs.detect-changed-files.outputs.no-files-changed != 'true'
    needs: [detect-changed-files]
    uses: paulsengroup/hictk/.github/workflows/build-conan-deps-linux.yml@40293429314b8a380c0ed0108f60b865ff96609b
    with:
      build-type: Debug
      conan-version: "2.21.*"
      cppstd: 17
      image: "ghcr.io/paulsengroup/ci-docker-images/ubuntu-20.04-cxx-clang-21"
      ref: main

  run-clang-tidy:
    name: Run clang-tidy
    if: needs.detect-changed-files.outputs.no-files-changed != 'true'
    needs:
      - build-deps
      - detect-changed-files
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/paulsengroup/ci-docker-images/ubuntu-24.04-cxx-clang-21
      options: "--user=root"

    env:
      CCACHE_DISABLE: 1
      TMPDIR: "/tmp/"

    steps:
      - uses: actions/checkout@v5

      - name: Fix permissions
        run: chown -R "$(id -u):$(id -g)" "$PWD"

      - name: Print clang-tidy version and config
        run: |
          clang-tidy -dump-config
          clang-tidy --version

      - name: Install Python headers
        run: |
          apt-get update
          apt-get install -y python3.12-dev

      - name: Download run-clang-tidy.py
        run: |
          apt-get update
          apt-get install -y curl xz-utils

          LLVM_VERSION=21.1.3
          CHECKSUM='2b2bacf525daba5ab183f98fdbd0f21df8bb421e15d938b2245180944186fc73'

          curl -L "https://github.com/llvm/llvm-project/releases/download/llvmorg-$LLVM_VERSION/clang-tools-extra-$LLVM_VERSION.src.tar.xz" |
            tar --strip-components=3 -xJf - "clang-tools-extra-$LLVM_VERSION.src/clang-tidy/tool/run-clang-tidy.py"

          sha256sum -c <(echo "$CHECKSUM  run-clang-tidy.py")

          ./run-clang-tidy.py --help

      - name: Restore cached dependencies
        uses: actions/cache/restore@v4
        with:
          key: ${{ needs.build-deps.outputs.cache-key }}
          path: ${{ needs.build-deps.outputs.tar }}
          fail-on-cache-miss: true

      - name: Unpack dependencies
        run: tar -C "$TMPDIR" -xf '${{ needs.build-deps.outputs.tar }}'

      - name: Configure project
        run: |
          cmake -DCMAKE_BUILD_TYPE=Debug                      \
                -DCMAKE_C_STANDARD=17                         \
                -DCMAKE_CXX_STANDARD=17                       \
                -DCMAKE_PREFIX_PATH="$TMPDIR/deps/cmake/"     \
                -DENABLE_DEVELOPER_MODE=OFF                   \
                -DHICTK_BUILD_BENCHMARKS=ON                   \
                -DHICTK_BUILD_EXAMPLES=ON                     \
                -DHICTK_BUILD_TOOLS=ON                        \
                -DHICTK_DOWNLOAD_TEST_DATASET=OFF             \
                -DHICTK_ENABLE_FUZZY_TESTING=ON               \
                -DHICTK_ENABLE_TESTING=ON                     \
                -DHICTK_WITH_ARROW=ON                         \
                -DHICTK_WITH_EIGEN=ON                         \
                -S .                                          \
                -B build

      - name: Generate files
        run: cmake --build build -t _hictk_check_git

      - name: Download list of changed files
        uses: actions/download-artifact@v5
        with:
          name: clang-tidy-filelist

      - name: Run clang-tidy
        run: |
          xargs \
          ./run-clang-tidy.py \
            -config-file=.clang-tidy \
            -j "$(nproc)" \
            -use-color \
            -warnings-as-errors='*' \
            -p build/ \
          < filelist.txt

  clang-tidy-status-check:
    name: Status Check (clang-tidy)
    if: ${{ always() }}
    runs-on: ubuntu-latest
    needs:
      - run-clang-tidy

    steps:
      - name: Collect job results
        if: |
          needs.run-clang-tidy.result != 'success' &&
          needs.run-clang-tidy.result != 'skipped'
        run: exit 1
